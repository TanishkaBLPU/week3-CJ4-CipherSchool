LECTURE 23


package abstraction;

public TimeComplexity {
	static boolean isPriceRaw(int n) {
		if(n<=1) return false;
		if(n==2) return true;
		for(int i = 2; i<n; i++) {
			if(n%i ==0) return false;
		}
		return true;
	}
	
	
	static boolean isPriceShaw(int n) {
		if(n<=1) return false;
		if(n==2) return true;
		for(int i = 2; i<Math.sqrt(n); i++) {
			if(n%i == 0) return false;
		}
		return true;
	}
	public static void main(String[] args) {
		int n = 100;
		long start = System.currentTimeMillis();
		System.out.println(isPriceRaw(n));
		long end = System.currentTimeMillis();
		System.out.println("Time by RAM'S approach: " + (end-start));
		start=System.currentTimeMillis();
		System.out.println(isPriceShaw(n));
		end = System.currentTimeMillis();
		System.out.println("Time by SRAM'S approach: "+ (end-start));
	}
	   

}
